name: Build and Publish

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: read

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  get-tag:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$tag" >> $GITHUB_OUTPUT

  build:
    needs: get-tag
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: 'tape'
            platform: 'linux/amd64'
            os: 'ubuntu-latest'
          - name: 'tape'
            platform: 'windows/amd64'
            os: 'windows-latest'
          - name: 'tape'
            platform: 'darwin/universal'
            os: 'macos-latest'

    runs-on: ${{ matrix.build.os }}
    env:
      TAPE_VERSION: ${{ needs.get-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build wails
        uses: dAppServer/wails-build-action@main
        id: build
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
          package: false
          go-version: '1.23'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.build.name }}-${{ replace(matrix.build.platform, '/', '-') }}.${{ needs.get-tag.outputs.tag }}
          path: |
            build/bin/*
            ${{ steps.build.outputs.binary-path }}
          if-no-files-found: error
          retention-days: 30
          compression-level: 0

  publish:
    needs: [get-tag, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.get-tag.outputs.tag }}
          name: Release ${{ needs.get-tag.outputs.tag }}
          draft: true
          prerelease: false
          files: ./artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
